{"ast":null,"code":"var _jsxFileName = \"/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/components/ListView.tsx\",\n  _s = $RefreshSig$();\n// List.tsx\nimport React from \"react\";\nimport { Box, Flex, Grid, GridItem, Button } from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport GameGrid from \"./GameGrid\";\nimport SortSelector from \"./SortSelector\";\nimport GameHeading from \"./GameHeading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  gameQuery,\n  setGameQuery\n}) => {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    templateAreas: {\n      base: `\"nav\" \"main\"`,\n      lg: `\"nav main\"`\n    },\n    templateColumns: {\n      base: \"1fr\",\n      lg: \"1fr 3fr\"\n    },\n    gap: 4,\n    padding: 4,\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      area: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        onSearch: searchInput => setGameQuery({\n          ...gameQuery,\n          searchInput\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        mt: 4,\n        onClick: () => navigate(\"/gallery\"),\n        children: \"View Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      area: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        paddingLeft: 2,\n        children: [/*#__PURE__*/_jsxDEV(GameHeading, {\n          gameQuery: gameQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"flex-end\",\n          paddingY: 2,\n          children: /*#__PURE__*/_jsxDEV(SortSelector, {\n            sortOrder: gameQuery.sortOrder,\n            onSelectSortOrder: sortOrder => setGameQuery({\n              ...gameQuery,\n              sortOrder\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n          gameQuery: gameQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","Box","Flex","Grid","GridItem","Button","useNavigate","NavBar","GameGrid","SortSelector","GameHeading","jsxDEV","_jsxDEV","List","gameQuery","setGameQuery","_s","navigate","templateAreas","base","lg","templateColumns","gap","padding","children","area","onSearch","searchInput","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","mt","onClick","paddingLeft","justify","paddingY","sortOrder","onSelectSortOrder","_c","$RefreshReg$"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/components/ListView.tsx"],"sourcesContent":["// List.tsx\nimport React from \"react\";\nimport { Box, Flex, Grid, GridItem, Button } from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport GameGrid from \"./GameGrid\";\nimport SortSelector from \"./SortSelector\";\nimport GameHeading from \"./GameHeading\";\nimport { GameQuery } from \"../App\";\n\ninterface Props {\n  gameQuery: GameQuery;\n  setGameQuery: React.Dispatch<React.SetStateAction<GameQuery>>;\n}\n\nconst List: React.FC<Props> = ({ gameQuery, setGameQuery }) => {\n  const navigate = useNavigate();\n\n  return (\n    <Grid\n      templateAreas={{\n        base: `\"nav\" \"main\"`,\n        lg: `\"nav main\"`,\n      }}\n      templateColumns={{\n        base: \"1fr\",\n        lg: \"1fr 3fr\",\n      }}\n      gap={4}\n      padding={4}\n    >\n      <GridItem area=\"nav\">\n        <NavBar\n          onSearch={(searchInput) =>\n            setGameQuery({ ...gameQuery, searchInput })\n          }\n        />\n        <Button colorScheme=\"blue\" mt={4} onClick={() => navigate(\"/gallery\")}>\n          View Gallery\n        </Button>\n      </GridItem>\n      <GridItem area=\"main\">\n        <Box paddingLeft={2}>\n          <GameHeading gameQuery={gameQuery} />\n          <Flex justify=\"flex-end\" paddingY={2}>\n            <SortSelector\n              sortOrder={gameQuery.sortOrder}\n              onSelectSortOrder={(sortOrder) =>\n                setGameQuery({ ...gameQuery, sortOrder })\n              }\n            />\n          </Flex>\n          <GameGrid gameQuery={gameQuery} />\n        </Box>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default List;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}