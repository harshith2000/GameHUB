{"ast":null,"code":"var _jsxFileName = \"/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/components/SortSelector.tsx\";\nimport { Box, Button, Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { BsChevronDown } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortSelector = ({\n  onSortChange,\n  sortOrder,\n  sortDirection\n}) => {\n  const sortOrders = [{\n    value: \"\",\n    label: \"Relevance\"\n  }, {\n    value: \"name\",\n    label: \"Name\"\n  }, {\n    value: \"released\",\n    label: \"Release date\"\n  }, {\n    value: \"metacritic\",\n    label: \"Popularity\"\n  }];\n  const currentSortOrder = sortOrders.find(order => order.value === sortOrder);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      paddingRight: 5,\n      children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n        as: Button,\n        rightIcon: /*#__PURE__*/_jsxDEV(BsChevronDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 44\n        }, this),\n        children: [\"Order by: \", (currentSortOrder === null || currentSortOrder === void 0 ? void 0 : currentSortOrder.label) || \"Relevance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n        children: sortOrders.map(order => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => onSelectSortOrder(order.value),\n          value: order.value,\n          children: order.label\n        }, order.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n        as: Button,\n        children: [\"Sort Direction: \", sortDirection === \"asc\" ? \"Ascending\" : \"Descending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => onSelectSortDirection(\"asc\"),\n          children: \"Ascending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => onSelectSortDirection(\"desc\"),\n          children: \"Descending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = SortSelector;\nexport default SortSelector;\nvar _c;\n$RefreshReg$(_c, \"SortSelector\");","map":{"version":3,"names":["Box","Button","Menu","MenuButton","MenuItem","MenuList","React","BsChevronDown","jsxDEV","_jsxDEV","SortSelector","onSortChange","sortOrder","sortDirection","sortOrders","value","label","currentSortOrder","find","order","children","paddingRight","as","rightIcon","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onSelectSortOrder","onSelectSortDirection","_c","$RefreshReg$"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/components/SortSelector.tsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { BsChevronDown } from \"react-icons/bs\";\n\ninterface Props {\n  onSelectSortOrder: (sortOrder: string) => void;\n  sortOrder: string;\n  onSelectSortDirection: (sortDirection: string) => void;\n  sortDirection: string;\n}\n\nconst SortSelector = ({ onSortChange, sortOrder, sortDirection }: Props) => {\n  const sortOrders = [\n    { value: \"\", label: \"Relevance\" },\n    { value: \"name\", label: \"Name\" },\n    { value: \"released\", label: \"Release date\" },\n    { value: \"metacritic\", label: \"Popularity\" },\n  ];\n\n  const currentSortOrder = sortOrders.find(\n    (order) => order.value === sortOrder\n  );\n\n  return (\n    <Menu>\n      <Box paddingRight={5}>\n        <MenuButton as={Button} rightIcon={<BsChevronDown />}>\n          Order by: {currentSortOrder?.label || \"Relevance\"}\n        </MenuButton>\n        <MenuList>\n          {sortOrders.map((order) => (\n            <MenuItem\n              onClick={() => onSelectSortOrder(order.value)}\n              key={order.value}\n              value={order.value}\n            >\n              {order.label}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Box>\n      <Menu>\n        <MenuButton as={Button}>\n          Sort Direction: {sortDirection === \"asc\" ? \"Ascending\" : \"Descending\"}\n        </MenuButton>\n        <MenuList>\n          <MenuItem onClick={() => onSelectSortDirection(\"asc\")}>\n            Ascending\n          </MenuItem>\n          <MenuItem onClick={() => onSelectSortDirection(\"desc\")}>\n            Descending\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </Menu>\n  );\n};\n\nexport default SortSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}