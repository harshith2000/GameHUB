{"ast":null,"code":"var _jsxFileName = \"/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Flex, Grid, GridItem, Show, Text } from \"@chakra-ui/react\";\nimport NavBar from \"./components/NavBar\";\nimport GameGrid from \"./components/GameGrid\";\nimport GenreList from \"./components/GenreList\";\nimport { useState } from \"react\";\nimport SortSelector from \"./components/SortSelector\";\nimport GameHeading from \"./components/GameHeading\";\nimport { Route, Routes } from \"react-router-dom\";\nimport GameDetail from \"./components/GameDetail\";\nimport useGames from \"./hooks/useGames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _gameQuery$genre;\n  const [gameQuery, setGameQuery] = useState({});\n  const {\n    games,\n    error,\n    isLoading\n  } = useGames(gameQuery.genre, {\n    params: {\n      genres: (_gameQuery$genre = gameQuery.genre) === null || _gameQuery$genre === void 0 ? void 0 : _gameQuery$genre.id,\n      ordering: gameQuery.sortOrder,\n      search: gameQuery.searchInput\n    }\n  }, [gameQuery]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [error && /*#__PURE__*/_jsxDEV(Text, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/game/:gameId\",\n      children: /*#__PURE__*/_jsxDEV(GameDetail, {\n        games: games\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        templateAreas: {\n          base: `\"nav\" \"main\"`,\n          lg: `\"nav nav\" \"aside main\"`\n        },\n        templateColumns: {\n          base: \"1fr\",\n          lg: \"250px 1fr\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          area: \"nav\",\n          color: \"red\",\n          children: /*#__PURE__*/_jsxDEV(NavBar, {\n            onSearch: searchInput => setGameQuery({\n              ...gameQuery,\n              searchInput\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Show, {\n          above: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            area: \"aside\",\n            paddingX: \"10px\",\n            children: /*#__PURE__*/_jsxDEV(GenreList, {\n              onSelectGenre: genre => {\n                setGameQuery({\n                  ...gameQuery,\n                  genre\n                });\n              },\n              selectedGenre: gameQuery.genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          area: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            paddingLeft: 2,\n            children: [/*#__PURE__*/_jsxDEV(GameHeading, {\n              gameQuery: gameQuery\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              paddingY: 2,\n              children: /*#__PURE__*/_jsxDEV(SortSelector, {\n                sortOrder: gameQuery.sortOrder,\n                onSelectSortOrder: sortOrder => setGameQuery({\n                  ...gameQuery,\n                  sortOrder\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n            gameQuery: gameQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cNwbTDs6BUoCbLxBsBdVUuPrchs=\", false, function () {\n  return [useGames];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","Flex","Grid","GridItem","Show","Text","NavBar","GameGrid","GenreList","useState","SortSelector","GameHeading","Route","Routes","GameDetail","useGames","jsxDEV","_jsxDEV","App","_s","_gameQuery$genre","gameQuery","setGameQuery","games","error","isLoading","genre","params","genres","id","ordering","sortOrder","search","searchInput","children","fileName","_jsxFileName","lineNumber","columnNumber","path","templateAreas","base","lg","templateColumns","area","color","onSearch","above","paddingX","onSelectGenre","selectedGenre","paddingLeft","paddingY","onSelectSortOrder","_c","$RefreshReg$"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/App.tsx"],"sourcesContent":["import { Box, Flex, Grid, GridItem, Show, Text } from \"@chakra-ui/react\";\nimport NavBar from \"./components/NavBar\";\nimport GameGrid from \"./components/GameGrid\";\nimport GenreList from \"./components/GenreList\";\nimport { useState } from \"react\";\nimport { Genre } from \"./hooks/useGenres\";\nimport SortSelector from \"./components/SortSelector\";\nimport GameHeading from \"./components/GameHeading\";\nimport { Route, Routes } from \"react-router-dom\";\nimport GameDetail from \"./components/GameDetail\";\nimport useGames from \"./hooks/useGames\";\n\nexport interface GameQuery {\n  genre: Genre | null;\n  sortOrder: string;\n  searchInput: string;\n}\n\nfunction App() {\n  const [gameQuery, setGameQuery] = useState<GameQuery>({} as GameQuery);\n  const { games, error, isLoading } = useGames(\n    gameQuery.genre,\n    {\n      params: {\n        genres: gameQuery.genre?.id,\n        ordering: gameQuery.sortOrder,\n        search: gameQuery.searchInput,\n      },\n    },\n    [gameQuery]\n  );\n  return (\n    <Routes>\n      {error && <Text>{error}</Text>}\n      <Route path=\"/game/:gameId\">\n        <GameDetail games={games} />\n      </Route>\n      <Route path=\"/\">\n        <Grid\n          templateAreas={{\n            base: `\"nav\" \"main\"`,\n            lg: `\"nav nav\" \"aside main\"`,\n          }}\n          templateColumns={{\n            base: \"1fr\",\n            lg: \"250px 1fr\",\n          }}\n        >\n          <GridItem area=\"nav\" color=\"red\">\n            <NavBar\n              onSearch={(searchInput) =>\n                setGameQuery({ ...gameQuery, searchInput })\n              }\n            />\n          </GridItem>\n          <Show above=\"lg\">\n            <GridItem area=\"aside\" paddingX=\"10px\">\n              <GenreList\n                onSelectGenre={(genre) => {\n                  setGameQuery({ ...gameQuery, genre });\n                }}\n                selectedGenre={gameQuery.genre}\n              />\n            </GridItem>\n          </Show>\n          <GridItem area=\"main\">\n            <Box paddingLeft={2}>\n              <GameHeading gameQuery={gameQuery} />\n              <Flex paddingY={2}>\n                <SortSelector\n                  sortOrder={gameQuery.sortOrder}\n                  onSelectSortOrder={(sortOrder) =>\n                    setGameQuery({ ...gameQuery, sortOrder })\n                  }\n                />\n              </Flex>\n            </Box>\n            <GameGrid gameQuery={gameQuery} />\n          </GridItem>\n        </Grid>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}