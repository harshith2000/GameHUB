{"ast":null,"code":"var _jsxFileName = \"/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Flex, Grid, GridItem, Show } from \"@chakra-ui/react\";\nimport NavBar from \"./components/NavBar\";\nimport GameGrid from \"./components/GameGrid\";\nimport GenreList from \"./components/GenreList\";\nimport { useState } from \"react\";\nimport SortSelector from \"./components/SortSelector\";\nimport GameHeading from \"./components/GameHeading\";\nimport { Route, Routes } from \"react-router-dom\";\nimport GameDetail from \"./components/GameDetail\";\nimport useGames from \"./hooks/useGames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _gameQuery$genre;\n  const [gameQuery, setGameQuery] = useState({\n    genre: null,\n    sortOrder: \"-metacritic\",\n    searchInput: \"\"\n  });\n  const {\n    games\n  } = useGames(gameQuery.genre, {\n    params: {\n      genres: (_gameQuery$genre = gameQuery.genre) === null || _gameQuery$genre === void 0 ? void 0 : _gameQuery$genre.id,\n      ordering: gameQuery.sortOrder,\n      search: gameQuery.searchInput\n    }\n  }, [gameQuery]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/game/:gameId\",\n      element: /*#__PURE__*/_jsxDEV(GameDetail, {\n        games: games\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Grid, {\n        templateAreas: {\n          base: `\"nav\" \"main\"`,\n          lg: `\"nav nav\" \"aside main\"`\n        },\n        templateColumns: {\n          base: \"1fr\",\n          lg: \"200px 1fr\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          area: \"nav\",\n          color: \"red\",\n          children: /*#__PURE__*/_jsxDEV(NavBar, {\n            onSearch: searchInput => setGameQuery({\n              ...gameQuery,\n              searchInput\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Show, {\n          above: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            area: \"aside\",\n            paddingX: \"10px\",\n            children: /*#__PURE__*/_jsxDEV(GenreList, {\n              onSelectGenre: genre => {\n                setGameQuery({\n                  ...gameQuery,\n                  genre\n                });\n              },\n              selectedGenre: gameQuery.genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          area: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            paddingLeft: 2,\n            children: [/*#__PURE__*/_jsxDEV(GameHeading, {\n              gameQuery: gameQuery\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              paddingY: 2,\n              children: /*#__PURE__*/_jsxDEV(SortSelector, {\n                sortOrder: gameQuery.sortOrder,\n                onSelectSortOrder: sortOrder => setGameQuery({\n                  ...gameQuery,\n                  sortOrder\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n            gameQuery: gameQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IJdWODrYo1BJKRp2S1iZKusfe30=\", false, function () {\n  return [useGames];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","Flex","Grid","GridItem","Show","NavBar","GameGrid","GenreList","useState","SortSelector","GameHeading","Route","Routes","GameDetail","useGames","jsxDEV","_jsxDEV","App","_s","_gameQuery$genre","gameQuery","setGameQuery","genre","sortOrder","searchInput","games","params","genres","id","ordering","search","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","templateAreas","base","lg","templateColumns","area","color","onSearch","above","paddingX","onSelectGenre","selectedGenre","paddingLeft","paddingY","onSelectSortOrder","_c","$RefreshReg$"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/App.tsx"],"sourcesContent":["import { Box, Flex, Grid, GridItem, Show } from \"@chakra-ui/react\";\nimport NavBar from \"./components/NavBar\";\nimport GameGrid from \"./components/GameGrid\";\nimport GenreList from \"./components/GenreList\";\nimport { useState } from \"react\";\nimport { Genre } from \"./hooks/useGenres\";\nimport SortSelector from \"./components/SortSelector\";\nimport GameHeading from \"./components/GameHeading\";\nimport { Route, Routes } from \"react-router-dom\";\nimport GameDetail from \"./components/GameDetail\";\nimport useGames from \"./hooks/useGames\";\n\nexport interface GameQuery {\n  genre: Genre | null;\n  sortOrder: string;\n  searchInput: string;\n}\n\nfunction App() {\n  const [gameQuery, setGameQuery] = useState<GameQuery>({\n    genre: null,\n    sortOrder: \"-metacritic\",\n    searchInput: \"\",\n  });\n  const { games } = useGames(\n    gameQuery.genre,\n    {\n      params: {\n        genres: gameQuery.genre?.id,\n        ordering: gameQuery.sortOrder,\n        search: gameQuery.searchInput,\n      },\n    },\n    [gameQuery]\n  );\n  return (\n    <Routes>\n      <Route path=\"/game/:gameId\" element={<GameDetail games={games} />} />\n      <Route\n        path=\"/\"\n        element={\n          <Grid\n            templateAreas={{\n              base: `\"nav\" \"main\"`,\n              lg: `\"nav nav\" \"aside main\"`,\n            }}\n            templateColumns={{\n              base: \"1fr\",\n              lg: \"200px 1fr\",\n            }}\n          >\n            <GridItem area=\"nav\" color=\"red\">\n              <NavBar\n                onSearch={(searchInput) =>\n                  setGameQuery({ ...gameQuery, searchInput })\n                }\n              />\n            </GridItem>\n            <Show above=\"lg\">\n              <GridItem area=\"aside\" paddingX=\"10px\">\n                <GenreList\n                  onSelectGenre={(genre) => {\n                    setGameQuery({ ...gameQuery, genre });\n                  }}\n                  selectedGenre={gameQuery.genre}\n                />\n              </GridItem>\n            </Show>\n            <GridItem area=\"main\">\n              <Box paddingLeft={2}>\n                <GameHeading gameQuery={gameQuery} />\n                <Flex paddingY={2}>\n                  <SortSelector\n                    sortOrder={gameQuery.sortOrder}\n                    onSelectSortOrder={(sortOrder) =>\n                      setGameQuery({ ...gameQuery, sortOrder })\n                    }\n                  />\n                </Flex>\n              </Box>\n              <GameGrid gameQuery={gameQuery} />\n            </GridItem>\n          </Grid>\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}