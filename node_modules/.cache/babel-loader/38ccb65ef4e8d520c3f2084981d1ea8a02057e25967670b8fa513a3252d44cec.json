{"ast":null,"code":"import{SimpleGrid,Text}from\"@chakra-ui/react\";import useGames from\"../hooks/useGames\";import GameCard from\"./GameCard\";import GameCardSkeleton from\"./GameCardSkeleton\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GameGrid=function GameGrid(_ref){var _gameQuery$genre;var gameQuery=_ref.gameQuery;var _useGames=useGames(gameQuery.genre,{params:{genres:(_gameQuery$genre=gameQuery.genre)===null||_gameQuery$genre===void 0?void 0:_gameQuery$genre.id,ordering:gameQuery.sortOrder,search:gameQuery.searchInput}},[gameQuery]),games=_useGames.games,error=_useGames.error,isLoading=_useGames.isLoading;var skeletons=[1,2,3,4,5,6,7,8,9,10,11,12];return/*#__PURE__*/_jsxs(_Fragment,{children:[error&&/*#__PURE__*/_jsx(Text,{children:error}),/*#__PURE__*/_jsxs(SimpleGrid,{columns:{sm:1,md:2,lg:3,xl:4},padding:\"10px\",spacing:8,children:[isLoading&&skeletons.map(function(skeleton){return/*#__PURE__*/_jsx(GameCardSkeleton,{},skeleton);}),games.map(function(game){return/*#__PURE__*/_jsx(GameCard,{game:game},game.id);})]})]});};export default GameGrid;","map":{"version":3,"names":["SimpleGrid","Text","useGames","GameCard","GameCardSkeleton","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GameGrid","_ref","_gameQuery$genre","gameQuery","_useGames","genre","params","genres","id","ordering","sortOrder","search","searchInput","games","error","isLoading","skeletons","children","columns","sm","md","lg","xl","padding","spacing","map","skeleton","game"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/components/GameGrid.tsx"],"sourcesContent":["import { SimpleGrid, Text } from \"@chakra-ui/react\";\nimport useGames from \"../hooks/useGames\";\nimport GameCard from \"./GameCard\";\nimport GameCardSkeleton from \"./GameCardSkeleton\";\nimport { GameQuery } from \"../App\";\n\ninterface Props {\n  gameQuery: GameQuery;\n}\n\nconst GameGrid = ({ gameQuery }: Props) => {\n  const { games, error, isLoading } = useGames(\n    gameQuery.genre,\n    {\n      params: {\n        genres: gameQuery.genre?.id,\n        ordering: gameQuery.sortOrder,\n        search: gameQuery.searchInput,\n      },\n    },\n    [gameQuery]\n  );\n  const skeletons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  return (\n    <>\n      {error && <Text>{error}</Text>}\n      <SimpleGrid\n        columns={{ sm: 1, md: 2, lg: 3, xl: 4 }}\n        padding=\"10px\"\n        spacing={8}\n      >\n        {isLoading &&\n          skeletons.map((skeleton) => <GameCardSkeleton key={skeleton} />)}\n        {games.map((game) => (\n          <GameCard key={game.id} game={game} />\n        ))}\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default GameGrid;\n"],"mappings":"AAAA,OAASA,UAAU,CAAEC,IAAI,KAAQ,kBAAkB,CACnD,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CACxC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAOlD,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAAC,IAAA,CAA6B,KAAAC,gBAAA,IAAvB,CAAAC,SAAS,CAAAF,IAAA,CAATE,SAAS,CAC3B,IAAAC,SAAA,CAAoCb,QAAQ,CAC1CY,SAAS,CAACE,KAAK,CACf,CACEC,MAAM,CAAE,CACNC,MAAM,EAAAL,gBAAA,CAAEC,SAAS,CAACE,KAAK,UAAAH,gBAAA,iBAAfA,gBAAA,CAAiBM,EAAE,CAC3BC,QAAQ,CAAEN,SAAS,CAACO,SAAS,CAC7BC,MAAM,CAAER,SAAS,CAACS,WACpB,CACF,CAAC,CACD,CAACT,SAAS,CACZ,CAAC,CAVOU,KAAK,CAAAT,SAAA,CAALS,KAAK,CAAEC,KAAK,CAAAV,SAAA,CAALU,KAAK,CAAEC,SAAS,CAAAX,SAAA,CAATW,SAAS,CAW/B,GAAM,CAAAC,SAAS,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACzD,mBACEnB,KAAA,CAAAE,SAAA,EAAAkB,QAAA,EACGH,KAAK,eAAInB,IAAA,CAACL,IAAI,EAAA2B,QAAA,CAAEH,KAAK,CAAO,CAAC,cAC9BjB,KAAA,CAACR,UAAU,EACT6B,OAAO,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAE,CAAE,CACxCC,OAAO,CAAC,MAAM,CACdC,OAAO,CAAE,CAAE,CAAAP,QAAA,EAEVF,SAAS,EACRC,SAAS,CAACS,GAAG,CAAC,SAACC,QAAQ,qBAAK/B,IAAA,CAACF,gBAAgB,IAAMiC,QAAW,CAAC,GAAC,CACjEb,KAAK,CAACY,GAAG,CAAC,SAACE,IAAI,qBACdhC,IAAA,CAACH,QAAQ,EAAemC,IAAI,CAAEA,IAAK,EAApBA,IAAI,CAACnB,EAAiB,CAAC,EACvC,CAAC,EACQ,CAAC,EACb,CAAC,CAEP,CAAC,CAED,cAAe,CAAAR,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}