{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport apiClient from \"../services/api-client\";\nimport { CanceledError } from \"axios\";\nconst useGames = (selectedGenre, requestConfig, deps) => {\n  _s();\n  const [games, setGames] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const prevRequestConfigRef = useRef();\n  useEffect(() => {\n    const controller = new AbortController();\n    setLoading(true);\n    apiClient.get(\"/games\", {\n      signal: controller.signal,\n      ...requestConfig\n    }).then(res => {\n      setGames(res.data.results);\n      setLoading(false);\n    }).catch(err => {\n      if (err instanceof CanceledError) return;\n      setError(err.message);\n      setLoading(false);\n    });\n    return () => controller.abort();\n  }, []);\n  return {\n    games,\n    error,\n    isLoading\n  };\n};\n_s(useGames, \"gWFPaYcTfwa8HsCq6oMGN/m/rDY=\");\nexport default useGames;","map":{"version":3,"names":["useEffect","useRef","useState","apiClient","CanceledError","useGames","selectedGenre","requestConfig","deps","_s","games","setGames","error","setError","isLoading","setLoading","prevRequestConfigRef","controller","AbortController","get","signal","then","res","data","results","catch","err","message","abort"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/hooks/useGames.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport apiClient from \"../services/api-client\";\nimport { AxiosRequestConfig, CanceledError } from \"axios\";\nimport { Genre } from \"./useGenres\";\n\n\nexport interface Game {\n  id: number;\n  name: string;\n  background_image: string;\n  metacritic: string;\n  released: string;\n  playtime: number;\n}\n\ninterface FetchGamesResponse {\n  count: number;\n  results: Game[];\n}\n\nconst useGames = (selectedGenre: Genre | null, requestConfig?: AxiosRequestConfig, deps?: any[]) => {\n  const [games, setGames] = useState<Game[]>([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const prevRequestConfigRef = useRef<AxiosRequestConfig | undefined>();\n  useEffect(() => {\n    const controller = new AbortController();\n    setLoading(true);\n    apiClient\n      .get<FetchGamesResponse>(\"/games\", {signal: controller.signal, ...requestConfig})\n      .then((res) => { \n        setGames(res.data.results);\n        setLoading(false);\n      })\n      .catch((err) => {\n        if(err instanceof CanceledError) return;\n        setError(err.message);\n        setLoading(false);\n      });\n\n      return () => controller.abort();\n  }, []);\n\n  return {games, error, isLoading};\n}\n\nexport default useGames;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAA6BC,aAAa,QAAQ,OAAO;AAkBzD,MAAMC,QAAQ,GAAGA,CAACC,aAA2B,EAAEC,aAAkC,EAAEC,IAAY,KAAK;EAAAC,EAAA;EAClG,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMc,oBAAoB,GAAGf,MAAM,CAAiC,CAAC;EACrED,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxCH,UAAU,CAAC,IAAI,CAAC;IAChBZ,SAAS,CACNgB,GAAG,CAAqB,QAAQ,EAAE;MAACC,MAAM,EAAEH,UAAU,CAACG,MAAM;MAAE,GAAGb;IAAa,CAAC,CAAC,CAChFc,IAAI,CAAEC,GAAG,IAAK;MACbX,QAAQ,CAACW,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC;MAC1BT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDU,KAAK,CAAEC,GAAG,IAAK;MACd,IAAGA,GAAG,YAAYtB,aAAa,EAAE;MACjCS,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;MACrBZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAME,UAAU,CAACW,KAAK,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAClB,KAAK;IAAEE,KAAK;IAAEE;EAAS,CAAC;AAClC,CAAC;AAAAL,EAAA,CAxBKJ,QAAQ;AA0Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}