{"ast":null,"code":"var _jsxFileName = \"/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/components/GameGrid.tsx\",\n  _s = $RefreshSig$();\nimport { SimpleGrid, Text } from \"@chakra-ui/react\";\nimport useGames from \"../hooks/useGames\";\nimport GameCard from \"./GameCard\";\nimport GameCardSkeleton from \"./GameCardSkeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameGrid = ({\n  selectedGenre\n}) => {\n  _s();\n  const {\n    games,\n    error,\n    isLoading\n  } = useGames(selectedGenre, {\n    params: {\n      genres: selectedGenre === null || selectedGenre === void 0 ? void 0 : selectedGenre.id\n    }\n  });\n  const skeletons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(Text, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        sm: 1,\n        md: 2,\n        lg: 3,\n        xl: 4\n      },\n      padding: \"10px\",\n      spacing: 10,\n      children: [isLoading && skeletons.map(skeleton => /*#__PURE__*/_jsxDEV(GameCardSkeleton, {}, skeleton, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 39\n      }, this)), games.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n        game: game\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GameGrid, \"0Egovc4DxcUwdNaBW8EmT4tOZqM=\", false, function () {\n  return [useGames];\n});\n_c = GameGrid;\nexport default GameGrid;\nvar _c;\n$RefreshReg$(_c, \"GameGrid\");","map":{"version":3,"names":["SimpleGrid","Text","useGames","GameCard","GameCardSkeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","GameGrid","selectedGenre","_s","games","error","isLoading","params","genres","id","skeletons","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","sm","md","lg","xl","padding","spacing","map","skeleton","game","_c","$RefreshReg$"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/components/GameGrid.tsx"],"sourcesContent":["import { SimpleGrid, Text } from \"@chakra-ui/react\";\nimport useGames from \"../hooks/useGames\";\nimport GameCard from \"./GameCard\";\nimport GameCardSkeleton from \"./GameCardSkeleton\";\nimport { Genre } from \"../hooks/useGenres\";\n\ninterface Props {\n  selectedGenre: Genre | null;\n}\n\nconst GameGrid = ({ selectedGenre }: Props) => {\n  const { games, error, isLoading } = useGames(selectedGenre, {\n    params: { genres: selectedGenre?.id },\n  });\n  const skeletons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  return (\n    <>\n      {error && <Text>{error}</Text>}\n      <SimpleGrid\n        columns={{ sm: 1, md: 2, lg: 3, xl: 4 }}\n        padding=\"10px\"\n        spacing={10}\n      >\n        {isLoading &&\n          skeletons.map((skeleton) => <GameCardSkeleton key={skeleton} />)}\n        {games.map((game) => (\n          <GameCard key={game.id} game={game} />\n        ))}\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default GameGrid;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,IAAI,QAAQ,kBAAkB;AACnD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAOlD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAqB,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGZ,QAAQ,CAACQ,aAAa,EAAE;IAC1DK,MAAM,EAAE;MAAEC,MAAM,EAAEN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO;IAAG;EACtC,CAAC,CAAC;EACF,MAAMC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACzD,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,GACGN,KAAK,iBAAIP,OAAA,CAACL,IAAI;MAAAkB,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9BjB,OAAA,CAACN,UAAU;MACTwB,OAAO,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MACxCC,OAAO,EAAC,MAAM;MACdC,OAAO,EAAE,EAAG;MAAAX,QAAA,GAEXL,SAAS,IACRI,SAAS,CAACa,GAAG,CAAEC,QAAQ,iBAAK1B,OAAA,CAACF,gBAAgB,MAAM4B,QAAQ;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC,EACjEX,KAAK,CAACmB,GAAG,CAAEE,IAAI,iBACd3B,OAAA,CAACH,QAAQ;QAAe8B,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAAChB,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA,eACb,CAAC;AAEP,CAAC;AAACZ,EAAA,CArBIF,QAAQ;EAAA,QACwBP,QAAQ;AAAA;AAAAgC,EAAA,GADxCzB,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}