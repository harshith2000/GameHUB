{"ast":null,"code":"var _jsxFileName = \"/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Flex, Grid, GridItem, Show } from \"@chakra-ui/react\";\nimport NavBar from \"./components/NavBar\";\nimport GameGrid from \"./components/GameGrid\";\nimport GenreList from \"./components/GenreList\";\nimport { useState } from \"react\";\nimport SortSelector from \"./components/SortSelector\";\nimport GameHeading from \"./components/GameHeading\";\nimport { Route, Routes } from \"react-router-dom\";\nimport GameDetail from \"./components/GameDetail\";\nimport useGames from \"./hooks/useGames\";\nimport Gallery from \"./components/Gallery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _gameQuery$genre;\n  const [gameQuery, setGameQuery] = useState({});\n  const handleSortChange = (sortOrder, sortDirection) => {\n    setGameQuery({\n      ...gameQuery,\n      sortOrder,\n      sortDirection\n    });\n  };\n  const {\n    games,\n    error,\n    isLoading\n  } = useGames(gameQuery.genre, {\n    params: {\n      genres: (_gameQuery$genre = gameQuery.genre) === null || _gameQuery$genre === void 0 ? void 0 : _gameQuery$genre.id,\n      ordering: gameQuery.sortDirection === \"desc\" && gameQuery.sortOrder ? `-${gameQuery.sortOrder}` : gameQuery.sortOrder,\n      search: gameQuery.searchInput\n    }\n  }, [gameQuery]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/game/:gameId\",\n      element: /*#__PURE__*/_jsxDEV(GameDetail, {\n        games: games\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/gallery\",\n      element: /*#__PURE__*/_jsxDEV(Gallery, {\n        gameQuery: gameQuery,\n        setGameQuery: setGameQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Grid, {\n        templateAreas: {\n          base: `\"nav\" \"main\"`,\n          lg: `\"nav nav\" \"aside main\"`\n        },\n        templateColumns: {\n          base: \"1fr\",\n          lg: \"250px 1fr\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          area: \"nav\",\n          color: \"red\",\n          children: /*#__PURE__*/_jsxDEV(NavBar, {\n            onSearch: searchInput => setGameQuery({\n              ...gameQuery,\n              searchInput\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Show, {\n          above: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            area: \"aside\",\n            paddingX: \"10px\",\n            children: /*#__PURE__*/_jsxDEV(GenreList, {\n              onSelectGenre: genre => {\n                setGameQuery({\n                  ...gameQuery,\n                  genre\n                });\n              },\n              selectedGenre: gameQuery.genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          area: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            paddingLeft: 2,\n            children: [/*#__PURE__*/_jsxDEV(GameHeading, {\n              gameQuery: gameQuery\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              paddingY: 2,\n              children: /*#__PURE__*/_jsxDEV(SortSelector, {\n                sortOrder: gameQuery.sortOrder,\n                onSelectSortOrder: sortOrder => setGameQuery({\n                  ...gameQuery,\n                  sortOrder\n                }),\n                sortDirection: gameQuery.sortDirection,\n                onSelectSortDirection: sortDirection => setGameQuery({\n                  ...gameQuery,\n                  sortDirection\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n            gameQuery: gameQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cNwbTDs6BUoCbLxBsBdVUuPrchs=\", false, function () {\n  return [useGames];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","Flex","Grid","GridItem","Show","NavBar","GameGrid","GenreList","useState","SortSelector","GameHeading","Route","Routes","GameDetail","useGames","Gallery","jsxDEV","_jsxDEV","App","_s","_gameQuery$genre","gameQuery","setGameQuery","handleSortChange","sortOrder","sortDirection","games","error","isLoading","genre","params","genres","id","ordering","search","searchInput","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","templateAreas","base","lg","templateColumns","area","color","onSearch","above","paddingX","onSelectGenre","selectedGenre","paddingLeft","paddingY","onSelectSortOrder","onSelectSortDirection","_c","$RefreshReg$"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/App.tsx"],"sourcesContent":["import { Box, Flex, Grid, GridItem, Show } from \"@chakra-ui/react\";\nimport NavBar from \"./components/NavBar\";\nimport GameGrid from \"./components/GameGrid\";\nimport GenreList from \"./components/GenreList\";\nimport { useState } from \"react\";\nimport { Genre } from \"./hooks/useGenres\";\nimport SortSelector from \"./components/SortSelector\";\nimport GameHeading from \"./components/GameHeading\";\nimport { Route, Routes } from \"react-router-dom\";\nimport GameDetail from \"./components/GameDetail\";\nimport useGames from \"./hooks/useGames\";\nimport Gallery from \"./components/Gallery\";\n\nexport interface GameQuery {\n  genre: Genre | null;\n  sortOrder: string;\n  sortDirection: string;\n  searchInput: string;\n}\n\nfunction App() {\n  const [gameQuery, setGameQuery] = useState<GameQuery>({} as GameQuery);\n  const handleSortChange = (sortOrder: string, sortDirection: string) => {\n    setGameQuery({ ...gameQuery, sortOrder, sortDirection });\n  };\n  const { games, error, isLoading } = useGames(\n    gameQuery.genre,\n    {\n      params: {\n        genres: gameQuery.genre?.id,\n        ordering:\n          gameQuery.sortDirection === \"desc\" && gameQuery.sortOrder\n            ? `-${gameQuery.sortOrder}`\n            : gameQuery.sortOrder,\n        search: gameQuery.searchInput,\n      },\n    },\n    [gameQuery]\n  );\n\n  return (\n    <Routes>\n      <Route path=\"/game/:gameId\" element={<GameDetail games={games} />} />\n      <Route\n        path=\"/gallery\"\n        element={<Gallery gameQuery={gameQuery} setGameQuery={setGameQuery} />}\n      />\n      <Route\n        path=\"/\"\n        element={\n          <Grid\n            templateAreas={{\n              base: `\"nav\" \"main\"`,\n              lg: `\"nav nav\" \"aside main\"`,\n            }}\n            templateColumns={{\n              base: \"1fr\",\n              lg: \"250px 1fr\",\n            }}\n          >\n            <GridItem area=\"nav\" color=\"red\">\n              <NavBar\n                onSearch={(searchInput) =>\n                  setGameQuery({ ...gameQuery, searchInput })\n                }\n              />\n            </GridItem>\n            <Show above=\"lg\">\n              <GridItem area=\"aside\" paddingX=\"10px\">\n                <GenreList\n                  onSelectGenre={(genre) => {\n                    setGameQuery({ ...gameQuery, genre });\n                  }}\n                  selectedGenre={gameQuery.genre}\n                />\n              </GridItem>\n            </Show>\n            <GridItem area=\"main\">\n              <Box paddingLeft={2}>\n                <GameHeading gameQuery={gameQuery} />\n                <Flex paddingY={2}>\n                  <SortSelector\n                    sortOrder={gameQuery.sortOrder}\n                    onSelectSortOrder={(sortOrder) =>\n                      setGameQuery({ ...gameQuery, sortOrder })\n                    }\n                    sortDirection={gameQuery.sortDirection}\n                    onSelectSortDirection={(sortDirection) =>\n                      setGameQuery({ ...gameQuery, sortDirection })\n                    }\n                  />\n                </Flex>\n              </Box>\n              <GameGrid gameQuery={gameQuery} />\n            </GridItem>\n          </Grid>\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,kBAAkB;AAClE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAY,CAAC,CAAc,CAAC;EACtE,MAAMe,gBAAgB,GAAGA,CAACC,SAAiB,EAAEC,aAAqB,KAAK;IACrEH,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAEG,SAAS;MAAEC;IAAc,CAAC,CAAC;EAC1D,CAAC;EACD,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGd,QAAQ,CAC1CO,SAAS,CAACQ,KAAK,EACf;IACEC,MAAM,EAAE;MACNC,MAAM,GAAAX,gBAAA,GAAEC,SAAS,CAACQ,KAAK,cAAAT,gBAAA,uBAAfA,gBAAA,CAAiBY,EAAE;MAC3BC,QAAQ,EACNZ,SAAS,CAACI,aAAa,KAAK,MAAM,IAAIJ,SAAS,CAACG,SAAS,GACpD,IAAGH,SAAS,CAACG,SAAU,EAAC,GACzBH,SAAS,CAACG,SAAS;MACzBU,MAAM,EAAEb,SAAS,CAACc;IACpB;EACF,CAAC,EACD,CAACd,SAAS,CACZ,CAAC;EAED,oBACEJ,OAAA,CAACL,MAAM;IAAAwB,QAAA,gBACLnB,OAAA,CAACN,KAAK;MAAC0B,IAAI,EAAC,eAAe;MAACC,OAAO,eAAErB,OAAA,CAACJ,UAAU;QAACa,KAAK,EAAEA;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrEzB,OAAA,CAACN,KAAK;MACJ0B,IAAI,EAAC,UAAU;MACfC,OAAO,eAAErB,OAAA,CAACF,OAAO;QAACM,SAAS,EAAEA,SAAU;QAACC,YAAY,EAAEA;MAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACFzB,OAAA,CAACN,KAAK;MACJ0B,IAAI,EAAC,GAAG;MACRC,OAAO,eACLrB,OAAA,CAACf,IAAI;QACHyC,aAAa,EAAE;UACbC,IAAI,EAAG,cAAa;UACpBC,EAAE,EAAG;QACP,CAAE;QACFC,eAAe,EAAE;UACfF,IAAI,EAAE,KAAK;UACXC,EAAE,EAAE;QACN,CAAE;QAAAT,QAAA,gBAEFnB,OAAA,CAACd,QAAQ;UAAC4C,IAAI,EAAC,KAAK;UAACC,KAAK,EAAC,KAAK;UAAAZ,QAAA,eAC9BnB,OAAA,CAACZ,MAAM;YACL4C,QAAQ,EAAGd,WAAW,IACpBb,YAAY,CAAC;cAAE,GAAGD,SAAS;cAAEc;YAAY,CAAC;UAC3C;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACXzB,OAAA,CAACb,IAAI;UAAC8C,KAAK,EAAC,IAAI;UAAAd,QAAA,eACdnB,OAAA,CAACd,QAAQ;YAAC4C,IAAI,EAAC,OAAO;YAACI,QAAQ,EAAC,MAAM;YAAAf,QAAA,eACpCnB,OAAA,CAACV,SAAS;cACR6C,aAAa,EAAGvB,KAAK,IAAK;gBACxBP,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAEQ;gBAAM,CAAC,CAAC;cACvC,CAAE;cACFwB,aAAa,EAAEhC,SAAS,CAACQ;YAAM;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACPzB,OAAA,CAACd,QAAQ;UAAC4C,IAAI,EAAC,MAAM;UAAAX,QAAA,gBACnBnB,OAAA,CAACjB,GAAG;YAACsD,WAAW,EAAE,CAAE;YAAAlB,QAAA,gBAClBnB,OAAA,CAACP,WAAW;cAACW,SAAS,EAAEA;YAAU;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrCzB,OAAA,CAAChB,IAAI;cAACsD,QAAQ,EAAE,CAAE;cAAAnB,QAAA,eAChBnB,OAAA,CAACR,YAAY;gBACXe,SAAS,EAAEH,SAAS,CAACG,SAAU;gBAC/BgC,iBAAiB,EAAGhC,SAAS,IAC3BF,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAEG;gBAAU,CAAC,CACzC;gBACDC,aAAa,EAAEJ,SAAS,CAACI,aAAc;gBACvCgC,qBAAqB,EAAGhC,aAAa,IACnCH,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAEI;gBAAc,CAAC;cAC7C;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNzB,OAAA,CAACX,QAAQ;YAACe,SAAS,EAAEA;UAAU;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAACvB,EAAA,CAhFQD,GAAG;EAAA,QAK0BJ,QAAQ;AAAA;AAAA4C,EAAA,GALrCxC,GAAG;AAkFZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}