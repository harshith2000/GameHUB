{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport apiClient from \"../services/api-client\";\nimport { CanceledError } from \"axios\";\nconst useGames = (selectedGenre, requestConfig, deps) => {\n  _s();\n  const [games, setGames] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const prevRequestConfigRef = useRef();\n  useEffect(() => {\n    if (JSON.stringify(prevRequestConfigRef.current) !== JSON.stringify(requestConfig)) {\n      const controller = new AbortController();\n      setLoading(true);\n      apiClient.get(\"/games\", {\n        signal: controller.signal,\n        ...requestConfig\n      }).then(res => {\n        setGames(res.data.results);\n        setLoading(false);\n      }).catch(err => {\n        if (err instanceof CanceledError) return;\n        setError(err.message);\n        setLoading(false);\n      });\n\n      // Update the ref value for the next render cycle\n      prevRequestConfigRef.current = requestConfig;\n      return () => controller.abort();\n    }\n  }, [requestConfig]); // <- Now we can safely add requestConfig to the dependency array\n\n  return {\n    games,\n    error,\n    isLoading\n  };\n};\n_s(useGames, \"gWFPaYcTfwa8HsCq6oMGN/m/rDY=\");\nexport default useGames;","map":{"version":3,"names":["useEffect","useRef","useState","apiClient","CanceledError","useGames","selectedGenre","requestConfig","deps","_s","games","setGames","error","setError","isLoading","setLoading","prevRequestConfigRef","JSON","stringify","current","controller","AbortController","get","signal","then","res","data","results","catch","err","message","abort"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/hooks/useGames.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport apiClient from \"../services/api-client\";\nimport { AxiosRequestConfig, CanceledError } from \"axios\";\nimport { Genre } from \"./useGenres\";\n\n\nexport interface Game {\n  id: number;\n  name: string;\n  background_image: string;\n  metacritic: string;\n  released: string;\n  playtime: number;\n}\n\ninterface FetchGamesResponse {\n  count: number;\n  results: Game[];\n}\n\nconst useGames = (selectedGenre: Genre | null, requestConfig?: AxiosRequestConfig, deps?: any[]) => {\n  const [games, setGames] = useState<Game[]>([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const prevRequestConfigRef = useRef<AxiosRequestConfig | undefined>();\n  useEffect(() => {\n    if (JSON.stringify(prevRequestConfigRef.current) !== JSON.stringify(requestConfig)) {\n        const controller = new AbortController();\n        setLoading(true);\n        apiClient\n            .get<FetchGamesResponse>(\"/games\", { signal: controller.signal, ...requestConfig })\n            .then((res) => {\n                setGames(res.data.results);\n                setLoading(false);\n            })\n            .catch((err) => {\n                if (err instanceof CanceledError) return;\n                setError(err.message);\n                setLoading(false);\n            });\n\n        // Update the ref value for the next render cycle\n        prevRequestConfigRef.current = requestConfig;\n\n        return () => controller.abort();\n    }\n}, [requestConfig]);  // <- Now we can safely add requestConfig to the dependency array\n\n\n  return {games, error, isLoading};\n}\n\nexport default useGames;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAA6BC,aAAa,QAAQ,OAAO;AAkBzD,MAAMC,QAAQ,GAAGA,CAACC,aAA2B,EAAEC,aAAkC,EAAEC,IAAY,KAAK;EAAAC,EAAA;EAClG,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMc,oBAAoB,GAAGf,MAAM,CAAiC,CAAC;EACrED,SAAS,CAAC,MAAM;IACd,IAAIiB,IAAI,CAACC,SAAS,CAACF,oBAAoB,CAACG,OAAO,CAAC,KAAKF,IAAI,CAACC,SAAS,CAACX,aAAa,CAAC,EAAE;MAChF,MAAMa,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;MACxCN,UAAU,CAAC,IAAI,CAAC;MAChBZ,SAAS,CACJmB,GAAG,CAAqB,QAAQ,EAAE;QAAEC,MAAM,EAAEH,UAAU,CAACG,MAAM;QAAE,GAAGhB;MAAc,CAAC,CAAC,CAClFiB,IAAI,CAAEC,GAAG,IAAK;QACXd,QAAQ,CAACc,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC;QAC1BZ,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,CACDa,KAAK,CAAEC,GAAG,IAAK;QACZ,IAAIA,GAAG,YAAYzB,aAAa,EAAE;QAClCS,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;QACrBf,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;;MAEN;MACAC,oBAAoB,CAACG,OAAO,GAAGZ,aAAa;MAE5C,OAAO,MAAMa,UAAU,CAACW,KAAK,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,CAACxB,aAAa,CAAC,CAAC,CAAC,CAAE;;EAGpB,OAAO;IAACG,KAAK;IAAEE,KAAK;IAAEE;EAAS,CAAC;AAClC,CAAC;AAAAL,EAAA,CA9BKJ,QAAQ;AAgCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}