{"ast":null,"code":"var _jsxFileName = \"/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/index.tsx\";\nimport { ColorModeScript } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport \"./index.css\";\nimport * as ReactDOM from \"react-dom/client\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport App from \"./App\";\nimport theme from \"./theme\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst container = document.getElementById(\"root\");\nif (!container) throw new Error(\"Failed to find the root element\");\nconst root = ReactDOM.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(ColorModeScript, {\n        initialColorMode: theme.config.initialColorMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["ColorModeScript","React","ReactDOM","ChakraProvider","App","theme","reportWebVitals","serviceWorker","BrowserRouter","jsxDEV","_jsxDEV","container","document","getElementById","Error","root","createRoot","render","StrictMode","children","initialColorMode","config","fileName","_jsxFileName","lineNumber","columnNumber","unregister"],"sources":["/Users/saiharshithkaruneegarramesh/Desktop/409/mp2/src/index.tsx"],"sourcesContent":["import { ColorModeScript } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport \"./index.css\";\nimport * as ReactDOM from \"react-dom/client\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport App from \"./App\";\nimport theme from \"./theme\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst container = document.getElementById(\"root\");\nif (!container) throw new Error(\"Failed to find the root element\");\nconst root = ReactDOM.createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ChakraProvider theme={theme}>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,aAAa;AACpB,OAAO,KAAKC,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAChD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,IAAI,CAACF,SAAS,EAAE,MAAM,IAAIG,KAAK,CAAC,iCAAiC,CAAC;AAClE,MAAMC,IAAI,GAAGb,QAAQ,CAACc,UAAU,CAACL,SAAS,CAAC;AAE3CI,IAAI,CAACE,MAAM,eACTP,OAAA,CAACT,KAAK,CAACiB,UAAU;EAAAC,QAAA,eACfT,OAAA,CAACF,aAAa;IAAAW,QAAA,eACZT,OAAA,CAACP,cAAc;MAACE,KAAK,EAAEA,KAAM;MAAAc,QAAA,gBAC3BT,OAAA,CAACV,eAAe;QAACoB,gBAAgB,EAAEf,KAAK,CAACgB,MAAM,CAACD;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpEf,OAAA,CAACN,GAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC;;AAED;AACA;AACA;AACAlB,aAAa,CAACmB,UAAU,CAAC,CAAC;;AAE1B;AACA;AACA;AACApB,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}